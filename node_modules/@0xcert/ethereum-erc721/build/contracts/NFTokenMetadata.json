{
  "contractName": "NFTokenMetadata",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146100ca57806306fdde031461012e578063081812fc146101be578063095ea7b31461022b57806323b872dd1461027857806342842e0e146102e55780636352211e1461035257806370a08231146103bf57806395d89b4114610416578063a22cb465146104a6578063b88d4fde146104f5578063c87b56dd1461057a578063e985e9c514610620575b600080fd5b3480156100d657600080fd5b5061011460048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061069b565b604051808215151515815260200191505060405180910390f35b34801561013a57600080fd5b50610143610702565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610183578082015181840152602081019050610168565b50505050905090810190601f1680156101b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ca57600080fd5b506101e9600480360381019080803590602001909291905050506107a4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023757600080fd5b50610276600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610852565b005b34801561028457600080fd5b506102e3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aee565b005b3480156102f157600080fd5b50610350600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d61565b005b34801561035e57600080fd5b5061037d60048036038101908080359060200190929190505050610d82565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103cb57600080fd5b50610400600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dfb565b6040518082815260200191505060405180910390f35b34801561042257600080fd5b5061042b610e7f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561046b578082015181840152602081019050610450565b50505050905090810190601f1680156104985780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104b257600080fd5b506104f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610f21565b005b34801561050157600080fd5b50610578600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190820180359060200191909192939192939050505061105e565b005b34801561058657600080fd5b506105a5600480360381019080803590602001909291905050506110a3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105e55780820151818401526020810190506105ca565b50505050905090810190601f1680156106125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561062c57600080fd5b50610681600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111c9565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561079a5780601f1061076f5761010080835404028352916020019161079a565b820191906000526020600020905b81548152906001019060200180831161077d57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561081657600080fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061094d5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b151561095857600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156109c857600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610a3957600080fd5b856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610b9657503373ffffffffffffffffffffffffffffffffffffffff16610b7e836107a4565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c275750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610c3257600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610ca257600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515610d1257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610d4e57600080fd5b610d5886866112d4565b50505050505050565b610d7d8383836020604051908101604052806000815250611389565b505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610df657600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e3857600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f175780601f10610eec57610100808354040283529160200191610f17565b820191906000526020600020905b815481529060010190602001808311610efa57829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f5d57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61109c85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611389565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561111557600080fd5b600760008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111bc5780601f10611191576101008083540402835291602001916111bc565b820191906000526020600020905b81548152906001019060200180831161119f57829003601f168201915b5050505050915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561120657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561124257600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061131582611814565b61131f81836118a1565b6113298383611a29565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000808360006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061143257503373ffffffffffffffffffffffffffffffffffffffff1661141a836107a4565b73ffffffffffffffffffffffffffffffffffffffff16145b806114c35750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15156114ce57600080fd5b85600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561153e57600080fd5b6001600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694508873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415156115ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141515156115ea57600080fd5b6115f488886112d4565b6116138873ffffffffffffffffffffffffffffffffffffffff16611b83565b15611809578773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561170d5780820151818401526020810190506116f2565b50505050905090810190601f16801561173a5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561175c57600080fd5b505af1158015611770573d6000803e3d6000fd5b505050506040513d602081101561178657600080fd5b8101908080519060200190929190505050935063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151561180857600080fd5b5b505050505050505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561189e576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561190e57600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561195957fe5b6119ac6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611a9757600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b3c6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611baf90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b6000828211151515611ba457fe5b818303905092915050565b6000808284019050838110151515611bc357fe5b80915050929150505600a165627a7a72305820d011e174a2ce3f22db4f0c39bd0bd3970abcc63925c3b3865b8454db74bbd3050029",
  "sourceMap": "172:2268:11:-;;;654:94;8:9:-1;5:2;;;30:1;27;20:12;5:2;654:94:11;456:4:16;422:19;:31;442:10;422:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;3988:4:9;3954:19;:31;3974:10;3954:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;721:4:11;687:19;:31;707:10;687:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;172:2268;;;;;;",
  "deployedSourceMap": "172:2268:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:150:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;613:150:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:93:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1908:93:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1908:93:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8651:159:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8651:159:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7501:316;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7501:316:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6830:300;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6830:300:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6148:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6148:157:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4641:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4641:170:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4261:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4261:169:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:101:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2069:101:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2069:101:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8219:248:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8219:248:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5618:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5618:177:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:151:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2286:151:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2286:151:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9015:242:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9015:242:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:150:16;704:4;725:19;:33;745:12;725:33;;;;;;;;;;;;;;;;;;;;;;;;;;;718:40;;613:150;;;:::o;1908:93:11:-;1959:12;1989:7;1981:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:93;:::o;8651:159:9:-;8758:7;8735:8;3858:1;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;8782:13;:23;8796:8;8782:23;;;;;;;;;;;;;;;;;;;;;8775:30;;8651:159;;;;:::o;7501:316::-;7640:18;7595:8;3128:18;3149:9;:19;3159:8;3149:19;;;;;;;;;;;;;;;;;;;;;3128:40;;3196:10;3182:24;;:10;:24;;;:68;;;;3210:16;:28;3227:10;3210:28;;;;;;;;;;;;;;;:40;3239:10;3210:40;;;;;;;;;;;;;;;;;;;;;;;;;3182:68;3174:77;;;;;;;;7622:8;3858:1;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;7661:9;:19;7671:8;7661:19;;;;;;;;;;;;;;;;;;;;;7640:40;;7707:10;7694:23;;:9;:23;;;;7686:32;;;;;;;;7751:9;7725:13;:23;7739:8;7725:23;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;7803:8;7792:9;7771:41;;7780:10;7771:41;;;;;;;;;;;;3257:1;7501:316;;;;;:::o;6830:300::-;6988:18;6943:8;3449:18;3470:9;:19;3480:8;3470:19;;;;;;;;;;;;;;;;;;;;;3449:40;;3524:10;3510:24;;:10;:24;;;:69;;;;3569:10;3544:35;;:21;3556:8;3544:11;:21::i;:::-;:35;;;3510:69;:119;;;;3589:16;:28;3606:10;3589:28;;;;;;;;;;;;;;;:40;3618:10;3589:40;;;;;;;;;;;;;;;;;;;;;;;;;3510:119;3495:140;;;;;;;;6970:8;3858:1;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;7009:9;:19;7019:8;7009:19;;;;;;;;;;;;;;;;;;;;;6988:40;;7056:5;7042:19;;:10;:19;;;7034:28;;;;;;;;7091:1;7076:17;;:3;:17;;;;7068:26;;;;;;;;7101:24;7111:3;7116:8;7101:9;:24::i;:::-;3642:1;6830:300;;;;;;:::o;6148:157::-;6257:43;6275:5;6282:3;6287:8;6257:43;;;;;;;;;;;;;:17;:43::i;:::-;6148:157;;;:::o;4641:170::-;4719:14;4752:9;:19;4762:8;4752:19;;;;;;;;;;;;;;;;;;;;;4743:28;;4803:1;4785:20;;:6;:20;;;;4777:29;;;;;;;;4641:170;;;:::o;4261:169::-;4339:7;4382:1;4364:20;;:6;:20;;;;4356:29;;;;;;;;4398:19;:27;4418:6;4398:27;;;;;;;;;;;;;;;;4391:34;;4261:169;;;:::o;2069:101:11:-;2122:14;2156:9;2146:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:101;:::o;8219:248:9:-;8343:1;8322:23;;:9;:23;;;;8314:32;;;;;;;;8394:9;8352:16;:28;8369:10;8352:28;;;;;;;;;;;;;;;:39;8381:9;8352:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;8441:9;8414:48;;8429:10;8414:48;;;8452:9;8414:48;;;;;;;;;;;;;;;;;;;;;;8219:248;;:::o;5618:177::-;5744:46;5762:5;5769:3;5774:8;5784:5;;5744:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;5618:177;;;;;:::o;2286:151:11:-;2392:6;2347:8;3858:1:9;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;2415:7:11;:17;2423:8;2415:17;;;;;;;;;;;2408:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:151;;;;:::o;9015:242:9:-;9123:4;9163:1;9145:20;;:6;:20;;;;9137:29;;;;;;;;9201:1;9180:23;;:9;:23;;;;9172:32;;;;;;;;9217:16;:24;9234:6;9217:24;;;;;;;;;;;;;;;:35;9242:9;9217:35;;;;;;;;;;;;;;;;;;;;;;;;;9210:42;;9015:242;;;;:::o;10218:258::-;10300:12;10315:9;:19;10325:8;10315:19;;;;;;;;;;;;;;;;;;;;;10300:34;;10340:23;10354:8;10340:13;:23::i;:::-;10370:29;10384:4;10390:8;10370:13;:29::i;:::-;10405:25;10416:3;10421:8;10405:10;:25::i;:::-;10462:8;10457:3;10442:29;;10451:4;10442:29;;;;;;;;;;;;10218:258;;;:::o;9526:509::-;9706:18;9880:13;9661:8;3449:18;3470:9;:19;3480:8;3470:19;;;;;;;;;;;;;;;;;;;;;3449:40;;3524:10;3510:24;;:10;:24;;;:69;;;;3569:10;3544:35;;:21;3556:8;3544:11;:21::i;:::-;:35;;;3510:69;:119;;;;3589:16;:28;3606:10;3589:28;;;;;;;;;;;;;;;:40;3618:10;3589:40;;;;;;;;;;;;;;;;;;;;;;;;;3510:119;3495:140;;;;;;;;9688:8;3858:1;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;9727:9;:19;9737:8;9727:19;;;;;;;;;;;;;;;;;;;;;9706:40;;9774:5;9760:19;;:10;:19;;;9752:28;;;;;;;;9809:1;9794:17;;:3;:17;;;;9786:26;;;;;;;;9819:24;9829:3;9834:8;9819:9;:24::i;:::-;9854:16;:3;:14;;;:16::i;:::-;9850:181;;;9916:3;9896:41;;;9938:10;9950:5;9957:8;9967:5;9896:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9896:77:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9896:77:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9896:77:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9896:77:9;;;;;;;;;;;;;;;;9880:93;;1218:10;9999:24;;9989:34;;;:6;:34;;;;9981:43;;;;;;;;9850:181;3642:1;9526:509;;;;;;;;:::o;11821:155::-;11920:1;11893:13;:23;11907:8;11893:23;;;;;;;;;;;;;;;;;;;;;:28;;;;11890:82;;;11942:13;:23;11956:8;11942:23;;;;;;;;;;;;11935:30;;;;;;;;;;;11890:82;11821:155;:::o;12242:274::-;12361:5;12338:28;;:9;:19;12348:8;12338:19;;;;;;;;;;;;;;;;;;;;;:28;;;12330:37;;;;;;;;12409:1;12380:19;:26;12400:5;12380:26;;;;;;;;;;;;;;;;:30;12373:38;;;;;;12446:33;12477:1;12446:19;:26;12466:5;12446:26;;;;;;;;;;;;;;;;:30;;:33;;;;:::i;:::-;12417:19;:26;12437:5;12417:26;;;;;;;;;;;;;;;:62;;;;12492:9;:19;12502:8;12492:19;;;;;;;;;;;;12485:26;;;;;;;;;;;12242:274;;:::o;12775:227::-;12898:1;12867:33;;:9;:19;12877:8;12867:19;;;;;;;;;;;;;;;;;;;;;:33;;;12859:42;;;;;;;;12930:3;12908:9;:19;12918:8;12908:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12966:31;12995:1;12966:19;:24;12986:3;12966:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;12939:19;:24;12959:3;12939:24;;;;;;;;;;;;;;;:58;;;;12775:227;;:::o;226:602:14:-;304:4;318:12;744:5;732:18;724:26;;822:1;815:4;:8;808:15;;226:602;;;;:::o;1145:142:12:-;1229:7;1259:2;1253;:8;;1246:16;;;;;;1280:2;1275;:7;1268:14;;1145:142;;;;:::o;1397:160::-;1481:7;1498:9;1515:2;1510;:7;1498:19;;1535:2;1530:1;:7;;1523:15;;;;;;1551:1;1544:8;;1397:160;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./NFToken.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\n */\ncontract NFTokenMetadata is\n  NFToken,\n  ERC721Metadata\n{\n\n  /**\n   * @dev A descriptive name for a collection of NFTs.\n   */\n  string internal nftName;\n\n  /**\n   * @dev An abbreviated name for NFTokens.\n   */\n  string internal nftSymbol;\n\n  /**\n   * @dev Mapping from NFT ID to metadata uri.\n   */\n  mapping (uint256 => string) internal idToUri;\n\n  /**\n   * @dev Contract constructor.\n   * @notice When implementing this contract don't forget to set nftName and nftSymbol.\n   */\n  constructor()\n    public\n  {\n    supportedInterfaces[0x5b5e139f] = true; // ERC721Metadata\n  }\n\n  /**\n   * @dev Burns a NFT.\n   * @notice This is a internal function which should be called from user-implemented external\n   * burn function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _owner Address of the NFT owner.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n  function _burn(\n    address _owner,\n    uint256 _tokenId\n  )\n    internal\n  {\n    super._burn(_owner, _tokenId);\n\n    if (bytes(idToUri[_tokenId]).length != 0) {\n      delete idToUri[_tokenId];\n    }\n  }\n\n  /**\n   * @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n   * @notice this is a internal function which should be called from user-implemented external\n   * function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _tokenId Id for which we want uri.\n   * @param _uri String representing RFC 3986 URI.\n   */\n  function _setTokenUri(\n    uint256 _tokenId,\n    string _uri\n  )\n    validNFToken(_tokenId)\n    internal\n  {\n    idToUri[_tokenId] = _uri;\n  }\n\n  /**\n   * @dev Returns a descriptive name for a collection of NFTokens.\n   */\n  function name()\n    external\n    view\n    returns (string _name)\n  {\n    _name = nftName;\n  }\n\n  /**\n   * @dev Returns an abbreviated name for NFTokens.\n   */\n  function symbol()\n    external\n    view\n    returns (string _symbol)\n  {\n    _symbol = nftSymbol;\n  }\n\n  /**\n   * @dev A distinct URI (RFC 3986) for a given NFT.\n   * @param _tokenId Id for which we want uri.\n   */\n  function tokenURI(\n    uint256 _tokenId\n  )\n    validNFToken(_tokenId)\n    external\n    view\n    returns (string)\n  {\n    return idToUri[_tokenId];\n  }\n\n}\n",
  "sourcePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/tokens/NFTokenMetadata.sol",
  "ast": {
    "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/tokens/NFTokenMetadata.sol",
    "exportedSymbols": {
      "NFTokenMetadata": [
        1504
      ]
    },
    "id": 1505,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1397,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/tokens/NFToken.sol",
        "file": "./NFToken.sol",
        "id": 1398,
        "nodeType": "ImportDirective",
        "scope": 1505,
        "sourceUnit": 1085,
        "src": "26:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/tokens/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1399,
        "nodeType": "ImportDirective",
        "scope": 1505,
        "sourceUnit": 418,
        "src": "50:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1400,
              "name": "NFToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1084,
              "src": "202:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFToken_$1084",
                "typeString": "contract NFToken"
              }
            },
            "id": 1401,
            "nodeType": "InheritanceSpecifier",
            "src": "202:7:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1402,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 417,
              "src": "213:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$417",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1403,
            "nodeType": "InheritanceSpecifier",
            "src": "213:14:11"
          }
        ],
        "contractDependencies": [
          373,
          417,
          1084,
          1687,
          1719
        ],
        "contractKind": "contract",
        "documentation": "@dev Optional metadata implementation for ERC-721 non-fungible token standard.",
        "fullyImplemented": true,
        "id": 1504,
        "linearizedBaseContracts": [
          1504,
          417,
          1084,
          1719,
          1687,
          373
        ],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1405,
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "300:23:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1404,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "300:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1407,
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "384:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1406,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "384:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1411,
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "473:44:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1410,
              "keyType": {
                "id": 1408,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "482:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "473:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1409,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "493:6:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1420,
              "nodeType": "Block",
              "src": "681:67:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1414,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1696,
                        "src": "687:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 1416,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783562356531333966",
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:10:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "687:31:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "721:4:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "687:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1419,
                  "nodeType": "ExpressionStatement",
                  "src": "687:38:11"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@notice When implementing this contract don't forget to set nftName and nftSymbol.",
            "id": 1421,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:0:11"
            },
            "scope": 1504,
            "src": "654:94:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1450,
              "nodeType": "Block",
              "src": "1172:127:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1431,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "1190:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1432,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "1198:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1774,
                        "src": "1178:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadata_$1504",
                          "typeString": "contract super NFTokenMetadata"
                        }
                      },
                      "id": 1430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 990,
                      "src": "1178:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1434,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:29:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1436,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "1224:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 1438,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1437,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "1232:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1224:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 1435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1218:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1218:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 1440,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1218:31:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1253:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1218:36:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1449,
                  "nodeType": "IfStatement",
                  "src": "1214:81:11",
                  "trueBody": {
                    "id": 1448,
                    "nodeType": "Block",
                    "src": "1256:39:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1264:24:11",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1443,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "1271:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 1445,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1444,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "1279:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1271:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1447,
                        "nodeType": "ExpressionStatement",
                        "src": "1264:24:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns a NFT.\n@notice This is a internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _owner Address of the NFT owner.\n@param _tokenId ID of the NFT to be burned.",
            "id": 1451,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1423,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "1116:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1425,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "1136:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1110:46:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:0:11"
            },
            "scope": 1504,
            "src": "1096:203:11",
            "stateMutability": "nonpayable",
            "superFunction": 990,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1467,
              "nodeType": "Block",
              "src": "1790:35:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1461,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "1796:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 1463,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1462,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1453,
                        "src": "1804:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1796:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1464,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1455,
                      "src": "1816:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1796:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1466,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:24:11"
                }
              ]
            },
            "documentation": "@dev Set a distinct URI (RFC 3986) for a given NFT ID.\n@notice this is a internal function which should be called from user-implemented external\nfunction. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _tokenId Id for which we want uri.\n@param _uri String representing RFC 3986 URI.",
            "id": 1468,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1458,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1453,
                    "src": "1765:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1459,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1457,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 570,
                  "src": "1752:12:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1752:22:11"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1453,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1468,
                  "src": "1710:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1455,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1468,
                  "src": "1732:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1454,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1704:43:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:11"
            },
            "scope": 1504,
            "src": "1683:142:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1477,
              "nodeType": "Block",
              "src": "1975:26:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1473,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1471,
                      "src": "1981:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1474,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1405,
                      "src": "1989:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1981:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1476,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:15:11"
                }
              ]
            },
            "documentation": "@dev Returns a descriptive name for a collection of NFTokens.",
            "id": 1478,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1921:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1471,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1959:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1958:14:11"
            },
            "scope": 1504,
            "src": "1908:93:11",
            "stateMutability": "view",
            "superFunction": 404,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1487,
              "nodeType": "Block",
              "src": "2140:30:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1483,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1481,
                      "src": "2146:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1484,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1407,
                      "src": "2156:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2146:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1486,
                  "nodeType": "ExpressionStatement",
                  "src": "2146:19:11"
                }
              ]
            },
            "documentation": "@dev Returns an abbreviated name for NFTokens.",
            "id": 1488,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2084:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1488,
                  "src": "2122:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2121:16:11"
            },
            "scope": 1504,
            "src": "2069:101:11",
            "stateMutability": "view",
            "superFunction": 409,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1502,
              "nodeType": "Block",
              "src": "2402:35:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1498,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1411,
                      "src": "2415:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 1500,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1499,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1490,
                      "src": "2423:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2415:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1497,
                  "id": 1501,
                  "nodeType": "Return",
                  "src": "2408:24:11"
                }
              ]
            },
            "documentation": "@dev A distinct URI (RFC 3986) for a given NFT.\n@param _tokenId Id for which we want uri.",
            "id": 1503,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1493,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1490,
                    "src": "2347:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1494,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1492,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 570,
                  "src": "2334:12:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2334:22:11"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1490,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "2309:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2303:26:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1496,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "2392:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1495,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2392:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2391:8:11"
            },
            "scope": 1504,
            "src": "2286:151:11",
            "stateMutability": "view",
            "superFunction": 416,
            "visibility": "external"
          }
        ],
        "scope": 1505,
        "src": "172:2268:11"
      }
    ],
    "src": "0:2441:11"
  },
  "legacyAST": {
    "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/tokens/NFTokenMetadata.sol",
    "exportedSymbols": {
      "NFTokenMetadata": [
        1504
      ]
    },
    "id": 1505,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1397,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/tokens/NFToken.sol",
        "file": "./NFToken.sol",
        "id": 1398,
        "nodeType": "ImportDirective",
        "scope": 1505,
        "sourceUnit": 1085,
        "src": "26:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/tokens/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1399,
        "nodeType": "ImportDirective",
        "scope": 1505,
        "sourceUnit": 418,
        "src": "50:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1400,
              "name": "NFToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1084,
              "src": "202:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFToken_$1084",
                "typeString": "contract NFToken"
              }
            },
            "id": 1401,
            "nodeType": "InheritanceSpecifier",
            "src": "202:7:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1402,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 417,
              "src": "213:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$417",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1403,
            "nodeType": "InheritanceSpecifier",
            "src": "213:14:11"
          }
        ],
        "contractDependencies": [
          373,
          417,
          1084,
          1687,
          1719
        ],
        "contractKind": "contract",
        "documentation": "@dev Optional metadata implementation for ERC-721 non-fungible token standard.",
        "fullyImplemented": true,
        "id": 1504,
        "linearizedBaseContracts": [
          1504,
          417,
          1084,
          1719,
          1687,
          373
        ],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1405,
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "300:23:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1404,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "300:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1407,
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "384:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1406,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "384:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1411,
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "473:44:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1410,
              "keyType": {
                "id": 1408,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "482:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "473:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1409,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "493:6:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1420,
              "nodeType": "Block",
              "src": "681:67:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1414,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1696,
                        "src": "687:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 1416,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783562356531333966",
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:10:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "687:31:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "721:4:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "687:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1419,
                  "nodeType": "ExpressionStatement",
                  "src": "687:38:11"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@notice When implementing this contract don't forget to set nftName and nftSymbol.",
            "id": 1421,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:0:11"
            },
            "scope": 1504,
            "src": "654:94:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1450,
              "nodeType": "Block",
              "src": "1172:127:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1431,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "1190:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1432,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "1198:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1774,
                        "src": "1178:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadata_$1504",
                          "typeString": "contract super NFTokenMetadata"
                        }
                      },
                      "id": 1430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 990,
                      "src": "1178:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1434,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:29:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1436,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "1224:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 1438,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1437,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "1232:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1224:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 1435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1218:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1218:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 1440,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1218:31:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1253:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1218:36:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1449,
                  "nodeType": "IfStatement",
                  "src": "1214:81:11",
                  "trueBody": {
                    "id": 1448,
                    "nodeType": "Block",
                    "src": "1256:39:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1264:24:11",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1443,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "1271:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 1445,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1444,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "1279:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1271:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1447,
                        "nodeType": "ExpressionStatement",
                        "src": "1264:24:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns a NFT.\n@notice This is a internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _owner Address of the NFT owner.\n@param _tokenId ID of the NFT to be burned.",
            "id": 1451,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1423,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "1116:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1425,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "1136:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1110:46:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:0:11"
            },
            "scope": 1504,
            "src": "1096:203:11",
            "stateMutability": "nonpayable",
            "superFunction": 990,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1467,
              "nodeType": "Block",
              "src": "1790:35:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1461,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "1796:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 1463,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1462,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1453,
                        "src": "1804:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1796:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1464,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1455,
                      "src": "1816:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1796:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1466,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:24:11"
                }
              ]
            },
            "documentation": "@dev Set a distinct URI (RFC 3986) for a given NFT ID.\n@notice this is a internal function which should be called from user-implemented external\nfunction. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _tokenId Id for which we want uri.\n@param _uri String representing RFC 3986 URI.",
            "id": 1468,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1458,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1453,
                    "src": "1765:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1459,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1457,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 570,
                  "src": "1752:12:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1752:22:11"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1453,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1468,
                  "src": "1710:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1455,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1468,
                  "src": "1732:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1454,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1704:43:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:11"
            },
            "scope": 1504,
            "src": "1683:142:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1477,
              "nodeType": "Block",
              "src": "1975:26:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1473,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1471,
                      "src": "1981:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1474,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1405,
                      "src": "1989:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1981:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1476,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:15:11"
                }
              ]
            },
            "documentation": "@dev Returns a descriptive name for a collection of NFTokens.",
            "id": 1478,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1921:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1471,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1959:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1958:14:11"
            },
            "scope": 1504,
            "src": "1908:93:11",
            "stateMutability": "view",
            "superFunction": 404,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1487,
              "nodeType": "Block",
              "src": "2140:30:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1483,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1481,
                      "src": "2146:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1484,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1407,
                      "src": "2156:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2146:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1486,
                  "nodeType": "ExpressionStatement",
                  "src": "2146:19:11"
                }
              ]
            },
            "documentation": "@dev Returns an abbreviated name for NFTokens.",
            "id": 1488,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2084:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1488,
                  "src": "2122:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2121:16:11"
            },
            "scope": 1504,
            "src": "2069:101:11",
            "stateMutability": "view",
            "superFunction": 409,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1502,
              "nodeType": "Block",
              "src": "2402:35:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1498,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1411,
                      "src": "2415:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 1500,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1499,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1490,
                      "src": "2423:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2415:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1497,
                  "id": 1501,
                  "nodeType": "Return",
                  "src": "2408:24:11"
                }
              ]
            },
            "documentation": "@dev A distinct URI (RFC 3986) for a given NFT.\n@param _tokenId Id for which we want uri.",
            "id": 1503,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1493,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1490,
                    "src": "2347:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1494,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1492,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 570,
                  "src": "2334:12:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2334:22:11"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1490,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "2309:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2303:26:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1496,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "2392:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1495,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2392:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2391:8:11"
            },
            "scope": 1504,
            "src": "2286:151:11",
            "stateMutability": "view",
            "superFunction": 416,
            "visibility": "external"
          }
        ],
        "scope": 1505,
        "src": "172:2268:11"
      }
    ],
    "src": "0:2441:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-06-24T20:59:47.069Z"
}