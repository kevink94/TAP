{
  "contractName": "NFTokenMetadataMock",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620026b3380380620026b3833981018060405281019080805182019291906020018051820192919050505060016000806301ffc9a77c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600080635b5e139f7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160059080519060200190620001e092919062000202565b508060069080519060200190620001f992919062000202565b505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024557805160ff191683800117855562000276565b8280016001018555821562000276579182015b828111156200027557825182559160200191906001019062000258565b5b50905062000285919062000289565b5090565b620002ae91905b80821115620002aa57600081600090555060010162000290565b5090565b90565b6123f280620002c16000396000f3006080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146100f657806306fdde031461015a578063081812fc146101ea578063095ea7b31461025757806323b872dd146102a457806342842e0e146103115780636352211e1461037e57806370a08231146103eb5780638da5cb5b1461044257806395d89b41146104995780639dc29fac14610529578063a22cb46514610576578063b88d4fde146105c5578063c87b56dd1461064a578063d3fc9864146106f0578063e985e9c514610755578063f2fde38b146107d0575b600080fd5b34801561010257600080fd5b5061014060048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610813565b604051808215151515815260200191505060405180910390f35b34801561016657600080fd5b5061016f61087a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101af578082015181840152602081019050610194565b50505050905090810190601f1680156101dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f657600080fd5b506102156004803603810190808035906020019092919050505061091c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026357600080fd5b506102a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109ca565b005b3480156102b057600080fd5b5061030f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c66565b005b34801561031d57600080fd5b5061037c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ed9565b005b34801561038a57600080fd5b506103a960048036038101908080359060200190929190505050610efa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103f757600080fd5b5061042c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f73565b6040518082815260200191505060405180910390f35b34801561044e57600080fd5b50610457610ff7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104a557600080fd5b506104ae61101d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ee5780820151818401526020810190506104d3565b50505050905090810190601f16801561051b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053557600080fd5b50610574600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110bf565b005b34801561058257600080fd5b506105c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611129565b005b3480156105d157600080fd5b50610648600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050611266565b005b34801561065657600080fd5b50610675600480360381019080803590602001909291905050506112ab565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106b557808201518184015260208101905061069a565b50505050905090810190601f1680156106e25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106fc57600080fd5b50610753600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506113d1565b005b34801561076157600080fd5b506107b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611479565b604051808215151515815260200191505060405180910390f35b3480156107dc57600080fd5b50610811600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611584565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109125780601f106108e757610100808354040283529160200191610912565b820191906000526020600020905b8154815290600101906020018083116108f557829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561098e57600080fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610ac55750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610ad057600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610b4057600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610bb157600080fd5b856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610d0e57503373ffffffffffffffffffffffffffffffffffffffff16610cf68361091c565b73ffffffffffffffffffffffffffffffffffffffff16145b80610d9f5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610daa57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610e1a57600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515610e8a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610ec657600080fd5b610ed086866116dc565b50505050505050565b610ef58383836020604051908101604052806000815250611791565b505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610f6e57600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610fb057600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110b55780601f1061108a576101008083540402835291602001916110b5565b820191906000526020600020905b81548152906001019060200180831161109857829003601f168201915b5050505050905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561111b57600080fd5b6111258282611c1c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561116557600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6112a485858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611791565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561131d57600080fd5b600760008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113c45780601f10611399576101008083540402835291602001916113c4565b820191906000526020600020905b8154815290600101906020018083116113a757829003601f168201915b5050505050915050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561142d57600080fd5b6114378484611c7b565b6114738383838080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611d9f565b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156114b657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156114f257600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561161c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061171d82611e3c565b6117278183611ec9565b6117318383612051565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000808360006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061183a57503373ffffffffffffffffffffffffffffffffffffffff166118228361091c565b73ffffffffffffffffffffffffffffffffffffffff16145b806118cb5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15156118d657600080fd5b85600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561194657600080fd5b6001600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694508873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415156119b657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141515156119f257600080fd5b6119fc88886116dc565b611a1b8873ffffffffffffffffffffffffffffffffffffffff166121ab565b15611c11578773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b15578082015181840152602081019050611afa565b50505050905090810190601f168015611b425780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611b6457600080fd5b505af1158015611b78573d6000803e3d6000fd5b505050506040513d6020811015611b8e57600080fd5b8101908080519060200190929190505050935063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515611c1057600080fd5b5b505050505050505050565b611c2682826121be565b600060076000838152602001908152602001600020805460018160011615610100020316600290049050141515611c7757600760008281526020019081526020016000206000611c7691906122d9565b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611cb757600080fd5b60008114151515611cc757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d3557600080fd5b611d3f8282612051565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611e0f57600080fd5b81600760008581526020019081526020016000209080519060200190611e36929190612321565b50505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611ec6576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611f3657600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111515611f8157fe5b611fd46001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122a290919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156120bf57600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121646001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122bb90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561222e57600080fd5b61223782611e3c565b6122418383611ec9565b81600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008282111515156122b057fe5b818303905092915050565b60008082840190508381101515156122cf57fe5b8091505092915050565b50805460018160011615610100020316600290046000825580601f106122ff575061231e565b601f01602090049060005260206000209081019061231d91906123a1565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061236257805160ff1916838001178555612390565b82800160010185558215612390579182015b8281111561238f578251825591602001919060010190612374565b5b50905061239d91906123a1565b5090565b6123c391905b808211156123bf5760008160009055506001016123a7565b5090565b905600a165627a7a723058202143835cad835d81cafe3d6d01e2ef614e15799ba1184286045f37611bc7c5620029",
  "deployedBytecode": "0x6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146100f657806306fdde031461015a578063081812fc146101ea578063095ea7b31461025757806323b872dd146102a457806342842e0e146103115780636352211e1461037e57806370a08231146103eb5780638da5cb5b1461044257806395d89b41146104995780639dc29fac14610529578063a22cb46514610576578063b88d4fde146105c5578063c87b56dd1461064a578063d3fc9864146106f0578063e985e9c514610755578063f2fde38b146107d0575b600080fd5b34801561010257600080fd5b5061014060048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610813565b604051808215151515815260200191505060405180910390f35b34801561016657600080fd5b5061016f61087a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101af578082015181840152602081019050610194565b50505050905090810190601f1680156101dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f657600080fd5b506102156004803603810190808035906020019092919050505061091c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026357600080fd5b506102a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109ca565b005b3480156102b057600080fd5b5061030f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c66565b005b34801561031d57600080fd5b5061037c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ed9565b005b34801561038a57600080fd5b506103a960048036038101908080359060200190929190505050610efa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103f757600080fd5b5061042c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f73565b6040518082815260200191505060405180910390f35b34801561044e57600080fd5b50610457610ff7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104a557600080fd5b506104ae61101d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ee5780820151818401526020810190506104d3565b50505050905090810190601f16801561051b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053557600080fd5b50610574600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110bf565b005b34801561058257600080fd5b506105c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611129565b005b3480156105d157600080fd5b50610648600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050611266565b005b34801561065657600080fd5b50610675600480360381019080803590602001909291905050506112ab565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106b557808201518184015260208101905061069a565b50505050905090810190601f1680156106e25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106fc57600080fd5b50610753600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506113d1565b005b34801561076157600080fd5b506107b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611479565b604051808215151515815260200191505060405180910390f35b3480156107dc57600080fd5b50610811600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611584565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109125780601f106108e757610100808354040283529160200191610912565b820191906000526020600020905b8154815290600101906020018083116108f557829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561098e57600080fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610ac55750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610ad057600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610b4057600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610bb157600080fd5b856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610d0e57503373ffffffffffffffffffffffffffffffffffffffff16610cf68361091c565b73ffffffffffffffffffffffffffffffffffffffff16145b80610d9f5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610daa57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610e1a57600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515610e8a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610ec657600080fd5b610ed086866116dc565b50505050505050565b610ef58383836020604051908101604052806000815250611791565b505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610f6e57600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610fb057600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110b55780601f1061108a576101008083540402835291602001916110b5565b820191906000526020600020905b81548152906001019060200180831161109857829003601f168201915b5050505050905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561111b57600080fd5b6111258282611c1c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561116557600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6112a485858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611791565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561131d57600080fd5b600760008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113c45780601f10611399576101008083540402835291602001916113c4565b820191906000526020600020905b8154815290600101906020018083116113a757829003601f168201915b5050505050915050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561142d57600080fd5b6114378484611c7b565b6114738383838080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611d9f565b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156114b657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156114f257600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561161c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061171d82611e3c565b6117278183611ec9565b6117318383612051565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000808360006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061183a57503373ffffffffffffffffffffffffffffffffffffffff166118228361091c565b73ffffffffffffffffffffffffffffffffffffffff16145b806118cb5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15156118d657600080fd5b85600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561194657600080fd5b6001600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694508873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415156119b657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141515156119f257600080fd5b6119fc88886116dc565b611a1b8873ffffffffffffffffffffffffffffffffffffffff166121ab565b15611c11578773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b15578082015181840152602081019050611afa565b50505050905090810190601f168015611b425780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611b6457600080fd5b505af1158015611b78573d6000803e3d6000fd5b505050506040513d6020811015611b8e57600080fd5b8101908080519060200190929190505050935063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515611c1057600080fd5b5b505050505050505050565b611c2682826121be565b600060076000838152602001908152602001600020805460018160011615610100020316600290049050141515611c7757600760008281526020019081526020016000206000611c7691906122d9565b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611cb757600080fd5b60008114151515611cc757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d3557600080fd5b611d3f8282612051565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611e0f57600080fd5b81600760008581526020019081526020016000209080519060200190611e36929190612321565b50505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611ec6576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611f3657600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111515611f8157fe5b611fd46001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122a290919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156120bf57600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121646001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122bb90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561222e57600080fd5b61223782611e3c565b6122418383611ec9565b81600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008282111515156122b057fe5b818303905092915050565b60008082840190508381101515156122cf57fe5b8091505092915050565b50805460018160011615610100020316600290046000825580601f106122ff575061231e565b601f01602090049060005260206000209081019061231d91906123a1565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061236257805160ff1916838001178555612390565b82800160010185558215612390579182015b8281111561238f578251825591602001919060010190612374565b5b50905061239d91906123a1565b5090565b6123c391905b808211156123bf5760008160009055506001016123a7565b5090565b905600a165627a7a723058202143835cad835d81cafe3d6d01e2ef614e15799ba1184286045f37611bc7c5620029",
  "sourceMap": "227:1039:3:-;;;454:118;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:118:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:4:16;422:19;:31;442:10;422:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;3988:4:9;3954:19;:31;3974:10;3954:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;721:4:11;687:19;:31;707:10;687:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;729:10:13;721:5;;:18;;;;;;;;;;;;;;;;;;537:5:3;527:7;:15;;;;;;;;;;;;:::i;:::-;;560:7;548:9;:19;;;;;;;;;;;;:::i;:::-;;454:118;;227:1039;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "227:1039:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:150:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;613:150:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:93:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1908:93:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1908:93:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8651:159:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8651:159:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7501:316;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7501:316:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6830:300;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6830:300:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6148:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6148:157:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4641:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4641:170:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4261:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4261:169:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:20:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;271:20:13;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:101:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2069:101:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2069:101:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:129:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1134:129:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8219:248:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8219:248:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5618:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5618:177:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:151:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2286:151:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2286:151:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;788:180:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;788:180:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9015:242:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9015:242:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1053:196:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1053:196:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:150:16;704:4;725:19;:33;745:12;725:33;;;;;;;;;;;;;;;;;;;;;;;;;;;718:40;;613:150;;;:::o;1908:93:11:-;1959:12;1989:7;1981:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:93;:::o;8651:159:9:-;8758:7;8735:8;3858:1;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;8782:13;:23;8796:8;8782:23;;;;;;;;;;;;;;;;;;;;;8775:30;;8651:159;;;;:::o;7501:316::-;7640:18;7595:8;3128:18;3149:9;:19;3159:8;3149:19;;;;;;;;;;;;;;;;;;;;;3128:40;;3196:10;3182:24;;:10;:24;;;:68;;;;3210:16;:28;3227:10;3210:28;;;;;;;;;;;;;;;:40;3239:10;3210:40;;;;;;;;;;;;;;;;;;;;;;;;;3182:68;3174:77;;;;;;;;7622:8;3858:1;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;7661:9;:19;7671:8;7661:19;;;;;;;;;;;;;;;;;;;;;7640:40;;7707:10;7694:23;;:9;:23;;;;7686:32;;;;;;;;7751:9;7725:13;:23;7739:8;7725:23;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;7803:8;7792:9;7771:41;;7780:10;7771:41;;;;;;;;;;;;3257:1;7501:316;;;;;:::o;6830:300::-;6988:18;6943:8;3449:18;3470:9;:19;3480:8;3470:19;;;;;;;;;;;;;;;;;;;;;3449:40;;3524:10;3510:24;;:10;:24;;;:69;;;;3569:10;3544:35;;:21;3556:8;3544:11;:21::i;:::-;:35;;;3510:69;:119;;;;3589:16;:28;3606:10;3589:28;;;;;;;;;;;;;;;:40;3618:10;3589:40;;;;;;;;;;;;;;;;;;;;;;;;;3510:119;3495:140;;;;;;;;6970:8;3858:1;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;7009:9;:19;7019:8;7009:19;;;;;;;;;;;;;;;;;;;;;6988:40;;7056:5;7042:19;;:10;:19;;;7034:28;;;;;;;;7091:1;7076:17;;:3;:17;;;;7068:26;;;;;;;;7101:24;7111:3;7116:8;7101:9;:24::i;:::-;3642:1;6830:300;;;;;;:::o;6148:157::-;6257:43;6275:5;6282:3;6287:8;6257:43;;;;;;;;;;;;;:17;:43::i;:::-;6148:157;;;:::o;4641:170::-;4719:14;4752:9;:19;4762:8;4752:19;;;;;;;;;;;;;;;;;;;;;4743:28;;4803:1;4785:20;;:6;:20;;;;4777:29;;;;;;;;4641:170;;;:::o;4261:169::-;4339:7;4382:1;4364:20;;:6;:20;;;;4356:29;;;;;;;;4398:19;:27;4418:6;4398:27;;;;;;;;;;;;;;;;4391:34;;4261:169;;;:::o;271:20:13:-;;;;;;;;;;;;;:::o;2069:101:11:-;2122:14;2156:9;2146:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:101;:::o;1134:129:3:-;873:5:13;;;;;;;;;;;859:19;;:10;:19;;;851:28;;;;;;;;1229:29:3;1241:6;1249:8;1229:11;:29::i;:::-;1134:129;;:::o;8219:248:9:-;8343:1;8322:23;;:9;:23;;;;8314:32;;;;;;;;8394:9;8352:16;:28;8369:10;8352:28;;;;;;;;;;;;;;;:39;8381:9;8352:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;8441:9;8414:48;;8429:10;8414:48;;;8452:9;8414:48;;;;;;;;;;;;;;;;;;;;;;8219:248;;:::o;5618:177::-;5744:46;5762:5;5769:3;5774:8;5784:5;;5744:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;5618:177;;;;;:::o;2286:151:11:-;2392:6;2347:8;3858:1:9;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;2415:7:11;:17;2423:8;2415:17;;;;;;;;;;;2408:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:151;;;;:::o;788:180:3:-;873:5:13;;;;;;;;;;;859:19;;:10;:19;;;851:28;;;;;;;;897:26:3;909:3;914:8;897:11;:26::i;:::-;929:34;948:8;958:4;;929:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:34::i;:::-;788:180;;;;:::o;9015:242:9:-;9123:4;9163:1;9145:20;;:6;:20;;;;9137:29;;;;;;;;9201:1;9180:23;;:9;:23;;;;9172:32;;;;;;;;9217:16;:24;9234:6;9217:24;;;;;;;;;;;;;;;:35;9242:9;9217:35;;;;;;;;;;;;;;;;;;;;;;;;;9210:42;;9015:242;;;;:::o;1053:196:13:-;873:5;;;;;;;;;;;859:19;;:10;:19;;;851:28;;;;;;;;1169:1;1148:23;;:9;:23;;;;1140:32;;;;;;;;1211:9;1183:38;;1204:5;;;;;;;;;;;1183:38;;;;;;;;;;;;1235:9;1227:5;;:17;;;;;;;;;;;;;;;;;;1053:196;:::o;10218:258:9:-;10300:12;10315:9;:19;10325:8;10315:19;;;;;;;;;;;;;;;;;;;;;10300:34;;10340:23;10354:8;10340:13;:23::i;:::-;10370:29;10384:4;10390:8;10370:13;:29::i;:::-;10405:25;10416:3;10421:8;10405:10;:25::i;:::-;10462:8;10457:3;10442:29;;10451:4;10442:29;;;;;;;;;;;;10218:258;;;:::o;9526:509::-;9706:18;9880:13;9661:8;3449:18;3470:9;:19;3480:8;3470:19;;;;;;;;;;;;;;;;;;;;;3449:40;;3524:10;3510:24;;:10;:24;;;:69;;;;3569:10;3544:35;;:21;3556:8;3544:11;:21::i;:::-;:35;;;3510:69;:119;;;;3589:16;:28;3606:10;3589:28;;;;;;;;;;;;;;;:40;3618:10;3589:40;;;;;;;;;;;;;;;;;;;;;;;;;3510:119;3495:140;;;;;;;;9688:8;3858:1;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;9727:9;:19;9737:8;9727:19;;;;;;;;;;;;;;;;;;;;;9706:40;;9774:5;9760:19;;:10;:19;;;9752:28;;;;;;;;9809:1;9794:17;;:3;:17;;;;9786:26;;;;;;;;9819:24;9829:3;9834:8;9819:9;:24::i;:::-;9854:16;:3;:14;;;:16::i;:::-;9850:181;;;9916:3;9896:41;;;9938:10;9950:5;9957:8;9967:5;9896:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9896:77:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9896:77:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9896:77:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9896:77:9;;;;;;;;;;;;;;;;9880:93;;1218:10;9999:24;;9989:34;;;:6;:34;;;;9981:43;;;;;;;;9850:181;3642:1;9526:509;;;;;;;;:::o;1096:203:11:-;1178:29;1190:6;1198:8;1178:11;:29::i;:::-;1253:1;1224:7;:17;1232:8;1224:17;;;;;;;;;;;1218:31;;;;;;;;;;;;;;;;:36;;1214:81;;;1271:7;:17;1279:8;1271:17;;;;;;;;;;;;1264:24;;;;:::i;:::-;1214:81;1096:203;;:::o;10858:265:9:-;10960:1;10945:17;;:3;:17;;;;10937:26;;;;;;;;10989:1;10977:8;:13;;10969:22;;;;;;;;11036:1;11005:33;;:9;:19;11015:8;11005:19;;;;;;;;;;;;;;;;;;;;;:33;;;10997:42;;;;;;;;11046:25;11057:3;11062:8;11046:10;:25::i;:::-;11109:8;11104:3;11083:35;;11100:1;11083:35;;;;;;;;;;;;10858:265;;:::o;1683:142:11:-;1765:8;3858:1:9;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;1816:4:11;1796:7;:17;1804:8;1796:17;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;1683:142;;;:::o;11821:155:9:-;11920:1;11893:13;:23;11907:8;11893:23;;;;;;;;;;;;;;;;;;;;;:28;;;;11890:82;;;11942:13;:23;11956:8;11942:23;;;;;;;;;;;;11935:30;;;;;;;;;;;11890:82;11821:155;:::o;12242:274::-;12361:5;12338:28;;:9;:19;12348:8;12338:19;;;;;;;;;;;;;;;;;;;;;:28;;;12330:37;;;;;;;;12409:1;12380:19;:26;12400:5;12380:26;;;;;;;;;;;;;;;;:30;12373:38;;;;;;12446:33;12477:1;12446:19;:26;12466:5;12446:26;;;;;;;;;;;;;;;;:30;;:33;;;;:::i;:::-;12417:19;:26;12437:5;12417:26;;;;;;;;;;;;;;;:62;;;;12492:9;:19;12502:8;12492:19;;;;;;;;;;;;12485:26;;;;;;;;;;;12242:274;;:::o;12775:227::-;12898:1;12867:33;;:9;:19;12877:8;12867:19;;;;;;;;;;;;;;;;;;;;;:33;;;12859:42;;;;;;;;12930:3;12908:9;:19;12918:8;12908:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12966:31;12995:1;12966:19;:24;12986:3;12966:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;12939:19;:24;12959:3;12939:24;;;;;;;;;;;;;;;:58;;;;12775:227;;:::o;226:602:14:-;304:4;318:12;744:5;732:18;724:26;;822:1;815:4;:8;808:15;;226:602;;;;:::o;11470:223:9:-;11548:8;3858:1;3827:33;;:9;:19;3837:8;3827:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3819:42;;;;;;;;11579:23;11593:8;11579:13;:23::i;:::-;11608:31;11622:6;11630:8;11608:13;:31::i;:::-;11679:8;11675:1;11650:38;;11659:6;11650:38;;;;;;;;;;;;11470:223;;;:::o;1145:142:12:-;1229:7;1259:2;1253;:8;;1246:16;;;;;;1280:2;1275;:7;1268:14;;1145:142;;;;:::o;1397:160::-;1481:7;1498:9;1515:2;1510;:7;1498:19;;1535:2;1530:1;:7;;1523:15;;;;;;1551:1;1544:8;;1397:160;;;;;:::o;227:1039:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../tokens/NFTokenMetadata.sol\";\nimport \"@0xcert/ethereum-utils/contracts/ownership/Ownable.sol\";\n\n/**\n * @dev This is an example contract implementation of NFToken with metadata extension.\n */\ncontract NFTokenMetadataMock is\n  NFTokenMetadata,\n  Ownable\n{\n\n  /**\n   * @dev Contract constructor.\n   * @param _name A descriptive name for a collection of NFTs.\n   * @param _symbol An abbreviated name for NFTokens.\n   */\n  constructor(\n    string _name,\n    string _symbol\n  )\n    public\n  {\n    nftName = _name;\n    nftSymbol = _symbol;\n  }\n\n  /**\n   * @dev Mints a new NFT.\n   * @param _to The address that will own the minted NFT.\n   * @param _tokenId of the NFT to be minted by the msg.sender.\n   * @param _uri String representing RFC 3986 URI.\n   */\n  function mint(\n    address _to,\n    uint256 _tokenId,\n    string _uri\n  )\n    onlyOwner\n    external\n  {\n    super._mint(_to, _tokenId);\n    super._setTokenUri(_tokenId, _uri);\n  }\n\n  /**\n   * @dev Removes a NFT from owner.\n   * @param _owner Address from wich we want to remove the NFT.\n   * @param _tokenId Which NFT we want to remove.\n   */\n  function burn(\n    address _owner,\n    uint256 _tokenId\n  )\n    onlyOwner\n    external\n  {\n    super._burn(_owner, _tokenId);\n  }\n\n}\n",
  "sourcePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/mocks/NFTokenMetadataMock.sol",
  "ast": {
    "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/mocks/NFTokenMetadataMock.sol",
    "exportedSymbols": {
      "NFTokenMetadataMock": [
        230
      ]
    },
    "id": 231,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 164,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/tokens/NFTokenMetadata.sol",
        "file": "../tokens/NFTokenMetadata.sol",
        "id": 165,
        "nodeType": "ImportDirective",
        "scope": 231,
        "sourceUnit": 1505,
        "src": "26:39:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0xcert/ethereum-utils/contracts/ownership/Ownable.sol",
        "file": "@0xcert/ethereum-utils/contracts/ownership/Ownable.sol",
        "id": 166,
        "nodeType": "ImportDirective",
        "scope": 231,
        "sourceUnit": 1659,
        "src": "66:64:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 167,
              "name": "NFTokenMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1504,
              "src": "261:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenMetadata_$1504",
                "typeString": "contract NFTokenMetadata"
              }
            },
            "id": 168,
            "nodeType": "InheritanceSpecifier",
            "src": "261:15:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 169,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1658,
              "src": "280:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1658",
                "typeString": "contract Ownable"
              }
            },
            "id": 170,
            "nodeType": "InheritanceSpecifier",
            "src": "280:7:3"
          }
        ],
        "contractDependencies": [
          373,
          417,
          1084,
          1504,
          1658,
          1687,
          1719
        ],
        "contractKind": "contract",
        "documentation": "@dev This is an example contract implementation of NFToken with metadata extension.",
        "fullyImplemented": true,
        "id": 230,
        "linearizedBaseContracts": [
          230,
          1658,
          1504,
          417,
          1084,
          1719,
          1687,
          373
        ],
        "name": "NFTokenMetadataMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "521:51:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1405,
                      "src": "527:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 178,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "537:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "527:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "527:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1407,
                      "src": "548:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 182,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "560:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "548:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "548:19:3"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@param _name A descriptive name for a collection of NFTs.\n@param _symbol An abbreviated name for NFTokens.",
            "id": 186,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "471:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "489:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "465:42:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:3"
            },
            "scope": 230,
            "src": "454:118:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "891:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 200,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "909:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "914:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "897:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataMock_$230",
                          "typeString": "contract super NFTokenMetadataMock"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 962,
                      "src": "897:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "897:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "897:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "948:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 208,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "958:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 204,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "929:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataMock_$230",
                          "typeString": "contract super NFTokenMetadataMock"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1468,
                      "src": "929:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "929:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "929:34:3"
                }
              ]
            },
            "documentation": "@dev Mints a new NFT.\n@param _to The address that will own the minted NFT.\n@param _tokenId of the NFT to be minted by the msg.sender.\n@param _uri String representing RFC 3986 URI.",
            "id": 212,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 195,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 194,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1632,
                  "src": "866:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "866:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "807:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "824:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 192,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "846:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:60:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "891:0:3"
            },
            "scope": 230,
            "src": "788:180:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "1223:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "1241:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "1249:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "1229:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataMock_$230",
                          "typeString": "contract super NFTokenMetadataMock"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1451,
                      "src": "1229:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1229:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "1229:29:3"
                }
              ]
            },
            "documentation": "@dev Removes a NFT from owner.\n@param _owner Address from wich we want to remove the NFT.\n@param _tokenId Which NFT we want to remove.",
            "id": 229,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 219,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 218,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1632,
                  "src": "1198:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1198:9:3"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1153:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1173:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1147:46:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1223:0:3"
            },
            "scope": 230,
            "src": "1134:129:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 231,
        "src": "227:1039:3"
      }
    ],
    "src": "0:1267:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/mocks/NFTokenMetadataMock.sol",
    "exportedSymbols": {
      "NFTokenMetadataMock": [
        230
      ]
    },
    "id": 231,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 164,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-erc721/contracts/tokens/NFTokenMetadata.sol",
        "file": "../tokens/NFTokenMetadata.sol",
        "id": 165,
        "nodeType": "ImportDirective",
        "scope": 231,
        "sourceUnit": 1505,
        "src": "26:39:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0xcert/ethereum-utils/contracts/ownership/Ownable.sol",
        "file": "@0xcert/ethereum-utils/contracts/ownership/Ownable.sol",
        "id": 166,
        "nodeType": "ImportDirective",
        "scope": 231,
        "sourceUnit": 1659,
        "src": "66:64:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 167,
              "name": "NFTokenMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1504,
              "src": "261:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenMetadata_$1504",
                "typeString": "contract NFTokenMetadata"
              }
            },
            "id": 168,
            "nodeType": "InheritanceSpecifier",
            "src": "261:15:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 169,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1658,
              "src": "280:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1658",
                "typeString": "contract Ownable"
              }
            },
            "id": 170,
            "nodeType": "InheritanceSpecifier",
            "src": "280:7:3"
          }
        ],
        "contractDependencies": [
          373,
          417,
          1084,
          1504,
          1658,
          1687,
          1719
        ],
        "contractKind": "contract",
        "documentation": "@dev This is an example contract implementation of NFToken with metadata extension.",
        "fullyImplemented": true,
        "id": 230,
        "linearizedBaseContracts": [
          230,
          1658,
          1504,
          417,
          1084,
          1719,
          1687,
          373
        ],
        "name": "NFTokenMetadataMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "521:51:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1405,
                      "src": "527:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 178,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "537:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "527:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "527:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1407,
                      "src": "548:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 182,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "560:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "548:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "548:19:3"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@param _name A descriptive name for a collection of NFTs.\n@param _symbol An abbreviated name for NFTokens.",
            "id": 186,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "471:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "489:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "465:42:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:3"
            },
            "scope": 230,
            "src": "454:118:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "891:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 200,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "909:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "914:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "897:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataMock_$230",
                          "typeString": "contract super NFTokenMetadataMock"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 962,
                      "src": "897:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "897:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "897:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "948:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 208,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "958:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 204,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "929:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataMock_$230",
                          "typeString": "contract super NFTokenMetadataMock"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1468,
                      "src": "929:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "929:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "929:34:3"
                }
              ]
            },
            "documentation": "@dev Mints a new NFT.\n@param _to The address that will own the minted NFT.\n@param _tokenId of the NFT to be minted by the msg.sender.\n@param _uri String representing RFC 3986 URI.",
            "id": 212,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 195,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 194,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1632,
                  "src": "866:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "866:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "807:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "824:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 192,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "846:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:60:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "891:0:3"
            },
            "scope": 230,
            "src": "788:180:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "1223:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "1241:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "1249:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "1229:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataMock_$230",
                          "typeString": "contract super NFTokenMetadataMock"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1451,
                      "src": "1229:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1229:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "1229:29:3"
                }
              ]
            },
            "documentation": "@dev Removes a NFT from owner.\n@param _owner Address from wich we want to remove the NFT.\n@param _tokenId Which NFT we want to remove.",
            "id": 229,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 219,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 218,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1632,
                  "src": "1198:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1198:9:3"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1153:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1173:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1147:46:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1223:0:3"
            },
            "scope": 230,
            "src": "1134:129:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 231,
        "src": "227:1039:3"
      }
    ],
    "src": "0:1267:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-06-24T20:59:47.064Z"
}