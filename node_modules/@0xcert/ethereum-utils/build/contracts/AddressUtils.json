{
  "contractName": "AddressUtils",
  "abi": [],
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058208889520258e9d3c500a233864165a3868578b52e6384c03dd6854cf6e23a817c0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058208889520258e9d3c500a233864165a3868578b52e6384c03dd6854cf6e23a817c0029",
  "sourceMap": "92:739:3:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "92:739:3:-;;;;;;;;",
  "source": "pragma solidity ^0.4.24;\n\n/**\n * @dev Utility library of inline functions on addresses.\n */\nlibrary AddressUtils {\n\n  /**\n   * @dev Returns whether the target address is a contract.\n   * @param _addr Address to check.\n   */\n  function isContract(\n    address _addr\n  )\n    internal\n    view\n    returns (bool)\n  {\n    uint256 size;\n\n    /**\n     * XXX Currently there is no better way to check if there is a contract in an address than to\n     * check the size of the code at that address.\n     * See https://ethereum.stackexchange.com/a/14016/36603 for more details about how this works.\n     * TODO: Check this again before the Serenity release, because all addresses will be\n     * contracts then.\n     */\n    assembly { size := extcodesize(_addr) } // solium-disable-line security/no-inline-assembly\n    return size > 0;\n  }\n\n}",
  "sourcePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-utils/contracts/utils/AddressUtils.sol",
  "ast": {
    "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-utils/contracts/utils/AddressUtils.sol",
    "exportedSymbols": {
      "AddressUtils": [
        226
      ]
    },
    "id": 227,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 209,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Utility library of inline functions on addresses.",
        "fullyImplemented": true,
        "id": 226,
        "linearizedBaseContracts": [
          226
        ],
        "name": "AddressUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "312:516:3",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 225,
                      "src": "318:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "318:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "318:12:3"
                },
                {
                  "externalReferences": [
                    {
                      "_addr": {
                        "declaration": 211,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "744:5:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "size": {
                        "declaration": 217,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "724:4:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 219,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(_addr)\n}",
                  "src": "713:101:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "815:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "822:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "815:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 223,
                  "nodeType": "Return",
                  "src": "808:15:3"
                }
              ]
            },
            "documentation": "@dev Returns whether the target address is a contract.\n@param _addr Address to check.",
            "id": 225,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "251:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:23:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "304:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:6:3"
            },
            "scope": 226,
            "src": "226:602:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 227,
        "src": "92:739:3"
      }
    ],
    "src": "0:831:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/xpeper/Work/0xcert.org/repositories/ethereum-utils/contracts/utils/AddressUtils.sol",
    "exportedSymbols": {
      "AddressUtils": [
        226
      ]
    },
    "id": 227,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 209,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Utility library of inline functions on addresses.",
        "fullyImplemented": true,
        "id": 226,
        "linearizedBaseContracts": [
          226
        ],
        "name": "AddressUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "312:516:3",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 225,
                      "src": "318:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "318:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "318:12:3"
                },
                {
                  "externalReferences": [
                    {
                      "_addr": {
                        "declaration": 211,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "744:5:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "size": {
                        "declaration": 217,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "724:4:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 219,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(_addr)\n}",
                  "src": "713:101:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "815:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "822:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "815:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 223,
                  "nodeType": "Return",
                  "src": "808:15:3"
                }
              ]
            },
            "documentation": "@dev Returns whether the target address is a contract.\n@param _addr Address to check.",
            "id": 225,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "251:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:23:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "304:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:6:3"
            },
            "scope": 226,
            "src": "226:602:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 227,
        "src": "92:739:3"
      }
    ],
    "src": "0:831:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-23T14:44:53.125Z"
}